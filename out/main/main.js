"use strict";require("dotenv").config();const{app:l,BrowserWindow:x,dialog:p,ipcMain:a,clipboard:m}=require("electron"),f=require("path"),i=require("fs"),B=require("util"),{exec:j}=require("child_process"),S=B.promisify(i.readdir),D=require("iconv-lite"),g=require("os"),w=require("xlsx");require("./protection");const{verifyLicense:L,loadLicense:q,saveLicense:$,getMachineId:E,getMacAddress:F,checkDeviceAuthorization:T}=require("./license");let d;if(process.platform==="win32"){process.env.LANG="zh_CN.UTF-8",process.env.LC_ALL="zh_CN.UTF-8";const o=process.stdout.write.bind(process.stdout);process.stdout.write=(t,s,e)=>(typeof t=="string"&&(t=D.encode(t,"cp936")),o(t,s,e))}function A(){d=new x({width:1400,height:960,webPreferences:{preload:f.join(__dirname,"../preload/preload.js"),contextIsolation:!0,webSecurity:!1}});const o=l.isPackaged?`file://${f.join(l.getAppPath(),"dist/index.html")}`:"http://localhost:5173";d.loadURL(o),l.isPackaged||d.webContents.openDevTools({mode:"detach"}),d.on("closed",()=>{d=null})}async function P(){try{process.platform!=="darwin"&&l.quit()}catch(o){console.error("退出失败:",o),process.exit(1)}}l.whenReady().then(()=>{A()}).catch(o=>{console.error("启动失败:",o),l.quit()});l.on("window-all-closed",P);l.on("before-quit",P);a.handle("select-directory",async()=>{const o=await p.showOpenDialog(d,{properties:["openDirectory"]});return o.canceled?null:o.filePaths[0]});a.handle("read-directory",async(o,t)=>{try{const s=await i.promises.readdir(t,{withFileTypes:!0}),e=[];for(const r of s)if(r.isFile()&&/\.(jpg|jpeg|png|gif|webp)$/i.test(r.name)){const c=f.join(t,r.name),n=await i.promises.stat(c);e.push({name:r.name,path:c,size:n.size,isDirectory:!1})}else r.isDirectory()&&e.push({name:r.name,path:f.join(t,r.name),isDirectory:!0});return e}catch(s){throw console.error("读取目录失败:",s),s}});a.handle("read-images-recursively",async(o,t)=>{const s=async e=>{let r=[];const c=await i.promises.readdir(e,{withFileTypes:!0});for(const n of c){const u=f.join(e,n.name);n.isDirectory()?r=r.concat(await s(u)):/\.(jpg|jpeg|png|gif|webp)$/i.test(n.name)&&r.push(u)}return r};return await s(t)});a.handle("save-file",async(o,{content:t,filename:s,defaultPath:e})=>{const{canceled:r,filePath:c}=await p.showSaveDialog({defaultPath:f.join(e||g.homedir(),s),filters:[{name:"Excel 文件",extensions:["xlsx"]}]});return r||!c?null:(i.writeFileSync(c,Buffer.from(t)),c)});a.handle("save-file-silently",async(o,t,s)=>{try{let e,r;if(t&&typeof t=="object"&&"content"in t&&"filePath"in t?(e=t.content,r=t.filePath):(e=t,r=s),console.log("准备保存文件:",{contentType:typeof e,isArrayBuffer:e instanceof ArrayBuffer,filePath:r}),!e)return console.error("保存内容为空"),{success:!1,error:"保存内容为空"};if(!r||typeof r!="string")return console.error("无效的文件路径:",r),{success:!1,error:"无效的文件路径"};const c=f.dirname(r);i.existsSync(c)||i.mkdirSync(c,{recursive:!0});let n;if(e instanceof ArrayBuffer)n=Buffer.from(e),console.log(`已将 ArrayBuffer 转换为 Buffer，长度: ${n.length}`);else if(Buffer.isBuffer(e))n=e;else if(typeof e=="string")n=Buffer.from(e);else if(e instanceof Uint8Array)n=Buffer.from(e);else return{success:!1,error:`不支持的数据类型: ${typeof e}`};return console.log(`写入文件: ${r}, buffer 长度: ${n.length}`),i.writeFileSync(r,n),console.log("文件已成功保存到:",r),{success:!0,filePath:r}}catch(e){return console.error("静默保存失败:",e),{success:!1,error:e.message}}});a.handle("save-image",async(o,t,s,e)=>{try{let r,c,n;t&&typeof t=="object"&&"content"in t?(r=t.content,c=t.filename,n=t.defaultPath):(r=t,c=s,n=e);const{canceled:u,filePath:h}=await p.showSaveDialog({defaultPath:f.join(n||g.homedir(),c),filters:[{name:"Excel 文件",extensions:["xlsx"]}]});if(u||!h)return null;let y;if(r instanceof ArrayBuffer)y=Buffer.from(r);else if(Buffer.isBuffer(r))y=r;else if(typeof r=="string")y=Buffer.from(r);else if(ArrayBuffer.isView(r))y=Buffer.from(r.buffer,r.byteOffset,r.byteLength);else if(r&&typeof r=="object"){console.log("内容是普通对象，尝试转换",typeof r);try{y=Buffer.from(JSON.stringify(r))}catch(v){throw new Error(`无法将对象转换为可保存格式: ${v.message}`)}}else throw new Error(`不支持的数据类型: ${Object.prototype.toString.call(r)}`);return i.writeFileSync(h,y),{success:!0,filePath:h}}catch(r){return console.error("保存文件失败:",r),null}});a.handle("save-image-silently",async(o,t,s)=>{console.log("save-image-silently 被调用，参数类型:",typeof t);try{let e,r;if(t&&typeof t=="object"&&"content"in t&&"filePath"in t?(e=t.content,r=t.filePath,console.log("使用对象格式参数，filePath:",r)):(e=t,r=s,console.log("使用独立参数，filePath:",r)),!r||typeof r!="string")throw console.error("文件路径无效:",r),new Error(`文件路径无效: ${r}`);if(!e)throw console.error("内容为空"),new Error("内容为空");const c=f.dirname(r);console.log("创建目录:",c),i.existsSync(c)||i.mkdirSync(c,{recursive:!0});let n;if(Buffer.isBuffer(e))console.log("内容是 Buffer"),n=e;else if(e instanceof ArrayBuffer)console.log("内容是 ArrayBuffer"),n=Buffer.from(e);else if(ArrayBuffer.isView(e))console.log("内容是 TypedArray"),n=Buffer.from(e.buffer,e.byteOffset,e.byteLength);else if(typeof e=="string")console.log("内容是字符串"),n=Buffer.from(e);else if(typeof e=="object")if(console.log("内容是对象，尝试序列化"),e.data&&(Buffer.isBuffer(e.data)||ArrayBuffer.isView(e.data)))console.log("使用对象的 data 属性"),n=Buffer.isBuffer(e.data)?e.data:Buffer.from(e.data.buffer,e.data.byteOffset,e.data.byteLength);else try{n=Buffer.from(JSON.stringify(e))}catch(u){throw new Error(`无法序列化内容: ${u.message}`)}else throw new Error(`不支持的数据类型: ${typeof e}`);if(!n)throw new Error("无法创建有效的缓冲区");return console.log(`写入文件: ${r}, 大小: ${n.length} 字节`),i.writeFileSync(r,n),console.log("文件保存成功"),{success:!0,filePath:r}}catch(e){return console.error("静默保存文件失败:",e),{success:!1,error:e.message}}});a.handle("write-clipboard-text",async(o,t)=>{try{return m.writeText(t),{success:!0}}catch(s){return console.error("写入剪贴板文本失败:",s),{success:!1,error:s.message}}});a.handle("simulate-paste",async()=>{try{const o=m.readText();return console.log("剪贴板内容:",o),require("electron").clipboard.writeText(o),j(`powershell -command "$wshell = New-Object -ComObject wscript.shell; $wshell.SendKeys('^v'); Start-Sleep -Milliseconds 100; $wshell.SendKeys('{TAB}')"`),{success:!0}}catch(o){return console.error("模拟粘贴失败:",o),{success:!1,error:o.message}}});a.handle("check-directory-exists",async(o,t)=>{try{return(await i.promises.stat(t)).isDirectory()}catch{return!1}});a.handle("create-directory",async(o,t)=>{try{return await i.promises.mkdir(t,{recursive:!0}),!0}catch(s){throw console.error("创建目录失败:",s),s}});a.handle("listDirectories",async(o,t)=>{try{if(!i.existsSync(t))return{success:!1,error:"Directory does not exist",directories:[]};const s=await S(t,{withFileTypes:!0}),e=[];for(const r of s)r.isDirectory()&&e.push(r.name);return{success:!0,directories:e}}catch(s){return console.error("Error listing directories:",s),{success:!1,error:s.message,directories:[]}}});a.handle("get-directory-file-count",async(o,t)=>{try{if(!(await i.promises.stat(t)).isDirectory())throw new Error("指定的路径不是目录");const e=await i.promises.readdir(t);return{total:(await Promise.all(e.map(async n=>{const u=f.join(t,n);try{const h=await i.promises.stat(u);return{name:n,isFile:h.isFile(),size:h.size,mtime:h.mtime}}catch{return null}}))).filter(n=>n&&n.isFile).length}}catch(s){throw console.error("获取目录文件数量失败:",s),s}});a.handle("open-directory-dialog",async()=>{const o=await p.showOpenDialog({properties:["openDirectory","createDirectory"],title:"选择项目路径",buttonLabel:"选择此目录"});return{canceled:o.canceled,filePaths:o.filePaths}});a.handle("select-file",async(o,t={})=>{const{filters:s=[{name:"Excel",extensions:["xlsx","xls"]}],...e}=t,r=await p.showOpenDialog({properties:["openFile"],filters:s,...e});return r.canceled?null:r.filePaths[0]});a.handle("read-file",async(o,t)=>{try{return(await i.promises.readFile(t)).buffer}catch(s){throw console.error("读取文件失败:",s),s}});a.handle("read-excel",async(o,t)=>{try{const s=i.readFileSync(t),e=w.read(s,{type:"buffer"}),r=e.SheetNames[0];return w.utils.sheet_to_json(e.Sheets[r])}catch(s){throw console.error("读取 Excel 文件失败:",s),s}});const b=()=>{const o=l.getPath("userData");return f.join(o,"projectList.json")};a.handle("save-project-list",async(o,t)=>{try{const s=b();return await i.promises.writeFile(s,t,"utf-8"),!0}catch(s){throw console.error("保存 projectList 失败：",s),s}});a.handle("load-project-list",async()=>{try{const o=b();return i.existsSync(o)?await i.promises.readFile(o,"utf-8"):"[]"}catch(o){throw console.error("读取 projectList 失败：",o),o}});a.handle("check-folder-exists",async(o,t)=>{try{if(!filePath||typeof filePath!="string")return{exists:!1,error:"Invalid path provided"};const s=t.normalize(filePath);return await access(s,i.constants.F_OK),{exists:!0}}catch(s){return{exists:!1,error:s.code==="ENOENT"?"Path does not exist":s.message}}});a.handle("check-file-exists",async(o,t)=>{try{return i.existsSync(t)}catch(s){return console.error("检查文件存在失败：",s),!1}});a.handle("read-directory-names",async(o,t)=>(await i.promises.readdir(t,{withFileTypes:!0})).filter(e=>e.isDirectory()).map(e=>e.name));a.handle("get-mac-address",async()=>await F());a.handle("exit-app",()=>{process.platform!=="darwin"&&l.quit(),l.quit()});
