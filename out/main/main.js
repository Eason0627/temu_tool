"use strict";require("dotenv").config();const{app:x,BrowserWindow:J,dialog:B,ipcMain:i,clipboard:N}=require("electron"),h=require("path"),c=require("fs"),V=require("util"),m=require("qiniu"),{exec:K,spawn:k}=require("child_process"),W=V.promisify(c.readdir),H=require("iconv-lite"),D=require("os"),I=require("axios"),O=require("xlsx");require("./protection");const{verifyLicense:ne,loadLicense:ae,saveLicense:ie,getMachineId:ce,getMacAddress:Z,checkDeviceAuthorization:le}=require("./license");let y;function q(){const o=process.platform,e=h.join(__dirname,"bin");return o==="win32"?h.join(e,"qshell-win.exe"):o==="darwin"?h.join(e,"qshell-mac"):h.join(e,"qshell-linux")}const G="_FnSgS59Hm_tcJjO-afClV9_eiblS7I81xEgD66i",X="wLoO6gAWjFgWYw0b5VL2PMlgBvoVhRSwSKg42ZVu",$="test-123czxc",Y="http://sw6qp9sts.hd-bkt.clouddn.com/",L=new m.auth.digest.Mac(G,X),ee=new m.conf.Config,E=new m.rs.BucketManager(L,ee),z=async o=>{if(!o.endsWith("/"))return{exists:!1,error:"文件夹路径必须以斜杠结尾，示例：合成文件/项目A/"};try{return await new Promise(t=>{E.listPrefix($,{prefix:o,limit:1},(s,r)=>{t(s?{exists:!1,error:s.message}:{exists:r.items&&r.items.length>0})})})}catch(e){return{exists:!1,error:`检测失败: ${e.message}`}}},re=async(o,e={})=>{const{forceCheck:t=!0}=e,s=o.endsWith("/")?o:`${o}/`,r=`${s}.keep`;if(t){const{exists:u}=await z(s);if(u)return{success:!0}}const n=new m.rs.PutPolicy({scope:`${$}:${r}`,expires:3600}).uploadToken(L),f=new m.form_up.FormUploader,l=new m.form_up.PutExtra,p=await new Promise(u=>{f.put(n,r,Buffer.from(""),l,(d,g,w)=>{d?u({success:!1,error:d.message}):w.statusCode===200?u({success:!0}):u({success:!1,error:g?.error||"上传失败"})})});return p.success?await new Promise(u=>{E.delete($,r,(d,g,w)=>{d?(console.error("删除失败:",d),u({success:!1,error:d.message})):w.statusCode===200||w.statusCode===612?u({success:!0}):(console.error("删除异常状态码:",w.statusCode),u({success:!1,error:"删除失败"}))})}):p},te=async o=>new Promise(e=>{E.stat($,o,(t,s,r)=>{e(r.statusCode===200&&!t)})}),se=async({fileKey:o,savePath:e})=>{try{const t=Math.floor(Date.now()/1e3)+3600,s=E.privateDownloadUrl(Y,o,t),r=h.dirname(e);c.existsSync(r)||c.mkdirSync(r,{recursive:!0});const a=await I({method:"GET",url:s,responseType:"arraybuffer"});return c.writeFileSync(e,Buffer.from(a.data)),{success:!0}}catch(t){return{success:!1,message:`下载失败: ${t.response?.status||t.message}`}}};i.handle("checkQiniuFolder",(o,e)=>z(e));i.handle("createQiniuFolder",(o,e,t)=>re(e,t));i.handle("checkQiniuFileExists",(o,e)=>te(e));i.handle("downloadQiniuFile",(o,e)=>se(e));i.handle("listQiniuFiles",async(o,{prefix:e,limit:t})=>new Promise(s=>{E.listPrefix($,{prefix:e,limit:t},(r,a)=>{if(r)return s({error:r.message});s({files:a.items.map(n=>({key:n.key,size:n.fsize,putTime:n.putTime}))})})}));i.handle("uploadProjectJSON",async(o,{data:e,key:t,token:s})=>{let r;try{r=h.join(D.tmpdir(),`upload_${Date.now()}.json`),await c.promises.writeFile(r,e,"utf-8");const a=new m.form_up.FormUploader,n=new m.form_up.PutExtra;return await new Promise(l=>{a.putFile(s,t,r,n,(p,P,u)=>{p?l({success:!1,error:p.message}):u.statusCode===200?l({success:!0,data:P}):l({success:!1,error:P.error})})})}catch(a){return console.error("文件上传过程中出错:",a),{success:!1,error:a.message}}finally{if(r)try{await c.promises.access(r,c.constants.F_OK),await c.promises.unlink(r)}catch(a){a.code!=="ENOENT"&&console.error("临时文件清理失败:",a)}}});i.handle("readJSONFile",async(o,e)=>{try{return c.promises.readFile(e,"utf-8")}catch(t){throw new Error(`读取文件失败: ${t.message}`)}});i.handle("check-account",async(o,e)=>{const t=q(),s=k(t,["user","ls"]);return new Promise(r=>{let a="";s.stdout.on("data",n=>{a+=n.toString()}),s.on("close",()=>{r(a.includes(e))})})});i.handle("init-qshell",(o,{ak:e,sk:t,bucket:s})=>{const r=q(),a=["account",e,t,s];return console.log("[args]",a),new Promise((n,f)=>{k(r,a).on("close",p=>{p===0?n():f("初始化失败")})})});i.handle("start-upload",async(o,{localDir:e,timestampDir:t})=>{const s=q(),r=h.join(x.getPath("temp"),"upload.log"),a=e.split("\\").pop(),n=["qupload2","--src-dir",e,"--bucket","test-123czxc","--key-prefix",`${t}/${a}/`,"--overwrite","--thread-count","100","--log-file",r];return console.log("[qshell]",n.join(" ")),new Promise((f,l)=>{const p=k(s,n),P=[];let u=0,d=0;function g(w){const C=c.readdirSync(w,{withFileTypes:!0});let b=0;return C.forEach(F=>{const j=h.join(w,F.name);F.isDirectory()?b+=g(j):/\.(jpg|jpeg|png)$/i.test(F.name)&&b++}),b}d=g(e),o.sender.send("upload-progress",{current:0,total:d,percent:0}),p.stdout.on("data",w=>{w.toString().split(`
`).forEach(b=>{if(b.includes("Upload File success")){const F=b.match(/\[[^:]+:((?:[^\]\[]|\[[^\]]*\])+)(?:\]|$)/);if(F&&F[1]){const j=F[1].split("/");console.log("match",F[1],j);const _=j[2];let A;if(!_.split(".")[1]){A=j[3],P.push({folder:_,name:A,url:`http://sw6qp9sts.hd-bkt.clouddn.com/${F[1]}`}),u++;const T=d>0?Math.floor(u/d*100):0;console.log(`已上传 ${u} 个文件，进度 ${T}%`),o.sender.send("upload-progress",{current:u,total:d,percent:T})}}}})}),p.on("close",w=>{o.sender.send("upload-progress",{current:u,total:d,percent:100,finished:!0}),w===0?f({urls:P,logPath:r}):l(`上传失败，查看日志: ${r}`)})})});if(process.platform==="win32"){process.env.LANG="zh_CN.UTF-8",process.env.LC_ALL="zh_CN.UTF-8";const o=process.stdout.write.bind(process.stdout);process.stdout.write=(e,t,s)=>(typeof e=="string"&&(e=H.encode(e,"cp936")),o(e,t,s))}function oe(){y=new J({width:1400,height:960,webPreferences:{preload:h.join(__dirname,"../preload/preload.js"),contextIsolation:!0,webSecurity:!1}});const o=x.isPackaged?`file://${h.join(x.getAppPath(),"dist/index.html")}`:"http://localhost:5173";y.loadURL(o),x.isPackaged||y.webContents.openDevTools({mode:"detach"}),y.on("closed",()=>{y=null})}async function U(){try{process.platform!=="darwin"&&x.quit()}catch(o){console.error("退出失败:",o),process.exit(1)}}x.whenReady().then(()=>{oe()}).catch(o=>{console.error("启动失败:",o),x.quit()});x.on("window-all-closed",U);x.on("before-quit",U);i.handle("select-directory",async()=>{const o=await B.showOpenDialog(y,{properties:["openDirectory"]});return o.canceled?null:o.filePaths[0]});i.handle("uploadFileStream",async(o,e)=>{try{const{filePath:t,key:s,token:r}=e,a=c.createReadStream(t),n=new m.auth.digest.Mac(null,null),f=new m.conf.Config;f.zone=m.zone.Zone_z0,f.useHttpsDomain=!0,f.useCdnDomain=!0;const l=new m.form_up.FormUploader(f),p=new m.form_up.PutExtra;return new Promise((P,u)=>{l.putStream(r,s,a,p,(d,g,w)=>{if(a.destroy(),d){console.error("七牛云上传失败:",d),u({success:!1,error:d.message});return}w.statusCode===200?(console.log("七牛云上传成功:",g),P({success:!0,data:g})):(console.error("七牛云上传失败:",w.statusCode,g),u({success:!1,error:`状态码: ${w.statusCode}, 信息: ${JSON.stringify(g)}`}))})})}catch(t){return console.error("七牛云流式上传处理错误:",t),{success:!1,error:t.message}}});i.handle("uploadToQiniu",async(o,e)=>{try{const{filePath:t,key:s,token:r}=e,a=new m.auth.digest.Mac(null,null),n=new m.conf.Config;n.zone=m.zone.Zone_z0,n.useHttpsDomain=!0,n.useCdnDomain=!0;const f=new m.form_up.FormUploader(n),l=new m.form_up.PutExtra;return new Promise((p,P)=>{f.putFile(r,s,t,l,(u,d,g)=>{if(u){console.error("七牛云上传失败:",u),P({success:!1,error:u.message});return}g.statusCode===200?(console.log("七牛云上传成功:",d),p({success:!0,data:d})):(console.error("七牛云上传失败:",g.statusCode,d),P({success:!1,error:`状态码: ${g.statusCode}, 信息: ${JSON.stringify(d)}`}))})})}catch(t){return console.error("七牛云上传处理错误:",t),{success:!1,error:t.message}}});i.handle("read-directory",async(o,e)=>{try{const t=await c.promises.readdir(e,{withFileTypes:!0}),s=[];for(const r of t)if(r.isFile()&&/\.(jpg|jpeg|png|gif|webp)$/i.test(r.name)){const a=h.join(e,r.name),n=await c.promises.stat(a);s.push({name:r.name,path:a,size:n.size,isDirectory:!1})}else r.isDirectory()&&s.push({name:r.name,path:h.join(e,r.name),isDirectory:!0});return s}catch(t){throw console.error("读取目录失败:",t),t}});i.handle("read-images-recursively",async(o,e)=>{const t=async s=>{let r=[];const a=await c.promises.readdir(s,{withFileTypes:!0});for(const n of a){const f=h.join(s,n.name);n.isDirectory()?r=r.concat(await t(f)):/\.(jpg|jpeg|png|gif|webp)$/i.test(n.name)&&r.push(f)}return r};return await t(e)});i.handle("save-excel",async(o,{content:e,filename:t,defaultPath:s})=>{const{canceled:r,filePath:a}=await B.showSaveDialog({defaultPath:h.join(s||D.homedir(),t),filters:[{name:"Excel 文件",extensions:["xlsx"]}]});return r||!a?null:(c.writeFileSync(a,Buffer.from(e)),a)});i.handle("save-json",async(o,{content:e,filename:t,defaultPath:s})=>{const r=t||"export.json";let a={filters:[{name:"JSON 文件",extensions:["json"]},{name:"所有文件",extensions:["*"]}]};s?a.defaultPath=h.join(s,r):a.defaultPath=h.join(D.homedir(),r);const{canceled:n,filePath:f}=await B.showSaveDialog(a);if(n||!f)return null;let l;return Buffer.isBuffer(e)?l=e:e instanceof ArrayBuffer||typeof e=="string"?l=Buffer.from(e):e&&typeof e=="object"?l=Buffer.from(JSON.stringify(e,null,2)):l=Buffer.from(String(e||"")),c.writeFileSync(f,l),f});i.handle("save-file-silently",async(o,e,t)=>{try{let s,r;if(e&&typeof e=="object"&&"content"in e&&"filePath"in e?(s=e.content,r=e.filePath):(s=e,r=t),console.log("准备保存文件:",{contentType:typeof s,isArrayBuffer:s instanceof ArrayBuffer,filePath:r}),!s)return console.error("保存内容为空"),{success:!1,error:"保存内容为空"};if(!r||typeof r!="string")return console.error("无效的文件路径:",r),{success:!1,error:"无效的文件路径"};const a=h.dirname(r);c.existsSync(a)||c.mkdirSync(a,{recursive:!0});let n;if(s instanceof ArrayBuffer)n=Buffer.from(s),console.log(`已将 ArrayBuffer 转换为 Buffer，长度: ${n.length}`);else if(Buffer.isBuffer(s))n=s;else if(typeof s=="string")n=Buffer.from(s);else if(s instanceof Uint8Array)n=Buffer.from(s);else return{success:!1,error:`不支持的数据类型: ${typeof s}`};return console.log(`写入文件: ${r}, buffer 长度: ${n.length}`),c.writeFileSync(r,n),console.log("文件已成功保存到:",r),{success:!0,filePath:r}}catch(s){return console.error("静默保存失败:",s),{success:!1,error:s.message}}});i.handle("save-image",async(o,e,t,s)=>{try{let r,a,n;e&&typeof e=="object"&&"content"in e?(r=e.content,a=e.filename,n=e.defaultPath):(r=e,a=t,n=s);const{canceled:f,filePath:l}=await B.showSaveDialog({defaultPath:h.join(n||D.homedir(),a),filters:[{name:"Excel 文件",extensions:["xlsx"]}]});if(f||!l)return null;let p;if(r instanceof ArrayBuffer)p=Buffer.from(r);else if(Buffer.isBuffer(r))p=r;else if(typeof r=="string")p=Buffer.from(r);else if(ArrayBuffer.isView(r))p=Buffer.from(r.buffer,r.byteOffset,r.byteLength);else if(r&&typeof r=="object"){console.log("内容是普通对象，尝试转换",typeof r);try{p=Buffer.from(JSON.stringify(r))}catch(P){throw new Error(`无法将对象转换为可保存格式: ${P.message}`)}}else throw new Error(`不支持的数据类型: ${Object.prototype.toString.call(r)}`);return c.writeFileSync(l,p),{success:!0,filePath:l}}catch(r){return console.error("保存文件失败:",r),null}});i.handle("save-image-silently",async(o,e,t)=>{console.log("save-image-silently 被调用，参数类型:",typeof e);try{let s,r;if(e&&typeof e=="object"&&"content"in e&&"filePath"in e?(s=e.content,r=e.filePath,console.log("使用对象格式参数，filePath:",r)):(s=e,r=t,console.log("使用独立参数，filePath:",r)),!r||typeof r!="string")throw console.error("文件路径无效:",r),new Error(`文件路径无效: ${r}`);if(!s)throw console.error("内容为空"),new Error("内容为空");const a=h.dirname(r);console.log("创建目录:",a),c.existsSync(a)||c.mkdirSync(a,{recursive:!0});let n;if(Buffer.isBuffer(s))console.log("内容是 Buffer"),n=s;else if(s instanceof ArrayBuffer)console.log("内容是 ArrayBuffer"),n=Buffer.from(s);else if(ArrayBuffer.isView(s))console.log("内容是 TypedArray"),n=Buffer.from(s.buffer,s.byteOffset,s.byteLength);else if(typeof s=="string")console.log("内容是字符串"),n=Buffer.from(s);else if(typeof s=="object")if(console.log("内容是对象，尝试序列化"),s.data&&(Buffer.isBuffer(s.data)||ArrayBuffer.isView(s.data)))console.log("使用对象的 data 属性"),n=Buffer.isBuffer(s.data)?s.data:Buffer.from(s.data.buffer,s.data.byteOffset,s.data.byteLength);else try{n=Buffer.from(JSON.stringify(s))}catch(f){throw new Error(`无法序列化内容: ${f.message}`)}else throw new Error(`不支持的数据类型: ${typeof s}`);if(!n)throw new Error("无法创建有效的缓冲区");return console.log(`写入文件: ${r}, 大小: ${n.length} 字节`),c.writeFileSync(r,n),console.log("文件保存成功"),{success:!0,filePath:r}}catch(s){return console.error("静默保存文件失败:",s),{success:!1,error:s.message}}});i.handle("write-clipboard-text",async(o,e)=>{try{return N.writeText(e),{success:!0}}catch(t){return console.error("写入剪贴板文本失败:",t),{success:!1,error:t.message}}});i.handle("simulate-paste",async()=>{try{const o=N.readText();return console.log("剪贴板内容:",o),require("electron").clipboard.writeText(o),K(`powershell -command "$wshell = New-Object -ComObject wscript.shell; $wshell.SendKeys('^v'); Start-Sleep -Milliseconds 100; $wshell.SendKeys('{TAB}')"`),{success:!0}}catch(o){return console.error("模拟粘贴失败:",o),{success:!1,error:o.message}}});i.handle("check-directory-exists",async(o,e)=>{try{return(await c.promises.stat(e)).isDirectory()}catch{return!1}});i.handle("create-directory",async(o,e)=>{try{return await c.promises.mkdir(e,{recursive:!0}),!0}catch(t){throw console.error("创建目录失败:",t),t}});i.handle("listFiles",(o,e)=>{try{return c.readdirSync(e).filter(t=>[".jpg",".png"].includes(h.extname(t).toLowerCase()))}catch(t){throw new Error(`读取目录失败: ${t.message}`)}});i.handle("moveFile",(o,e,t)=>{try{return c.renameSync(e,t),{success:!0}}catch(s){throw new Error(`移动文件失败: ${s.message}`)}});i.handle("listDirectories",async(o,e)=>{try{if(!c.existsSync(e))return{success:!1,error:"Directory does not exist",directories:[]};const t=await W(e,{withFileTypes:!0}),s=[];for(const r of t)r.isDirectory()&&s.push(r.name);return{success:!0,directories:s}}catch(t){return console.error("Error listing directories:",t),{success:!1,error:t.message,directories:[]}}});i.handle("get-directory-file-count",async(o,e)=>{try{if(!(await c.promises.stat(e)).isDirectory())throw new Error("指定的路径不是目录");const s=await c.promises.readdir(e);return{total:(await Promise.all(s.map(async n=>{const f=h.join(e,n);try{const l=await c.promises.stat(f);return{name:n,isFile:l.isFile(),size:l.size,mtime:l.mtime}}catch{return null}}))).filter(n=>n&&n.isFile).length}}catch(t){throw console.error("获取目录文件数量失败:",t),t}});i.handle("open-directory-dialog",async()=>{const o=await B.showOpenDialog({properties:["openDirectory","createDirectory"],title:"选择项目路径",buttonLabel:"选择此目录"});return{canceled:o.canceled,filePaths:o.filePaths}});i.handle("deleteFile",async(o,e)=>{try{return await c.promises.unlink(e),{success:!0}}catch(t){return{success:!1,error:t.message}}});i.handle("select-file",async(o,e={})=>{const{filters:t=[{name:"Excel",extensions:["xlsx","xls"]}],...s}=e,r=await B.showOpenDialog({properties:["openFile"],filters:t,...s});return r.canceled?null:r.filePaths[0]});i.handle("read-file",async(o,e)=>{try{return(await c.promises.readFile(e)).buffer}catch(t){throw console.error("读取文件失败:",t),t}});i.handle("read-excel",async(o,e)=>{try{const t=c.readFileSync(e),s=O.read(t,{type:"buffer"}),r=s.SheetNames[0];return O.utils.sheet_to_json(s.Sheets[r])}catch(t){throw console.error("读取 Excel 文件失败:",t),t}});const M=()=>{const o=x.getPath("userData");return h.join(o,"projectList.json")};i.handle("save-project-list",async(o,e)=>{try{const t=M();return await c.promises.writeFile(t,e,"utf-8"),!0}catch(t){throw console.error("保存 projectList 失败：",t),t}});i.handle("load-project-list",async()=>{try{const o=M();return c.existsSync(o)?await c.promises.readFile(o,"utf-8"):"[]"}catch(o){throw console.error("读取 projectList 失败：",o),o}});i.handle("check-folder-exists",async(o,e)=>{try{if(!filePath||typeof filePath!="string")return{exists:!1,error:"Invalid path provided"};const t=e.normalize(filePath);return await access(t,c.constants.F_OK),{exists:!0}}catch(t){return{exists:!1,error:t.code==="ENOENT"?"Path does not exist":t.message}}});i.handle("check-file-exists",async(o,e)=>{try{return c.existsSync(e)}catch(t){return console.error("检查文件存在失败：",t),!1}});i.handle("read-directory-names",async(o,e)=>(await c.promises.readdir(e,{withFileTypes:!0})).filter(s=>s.isDirectory()).map(s=>s.name));i.handle("get-mac-address",async()=>await Z());i.handle("exit-app",()=>{process.platform!=="darwin"&&x.quit(),x.quit()});const{autoUpdater:v}=require("electron-updater"),S=require("electron-log"),Q=process.env.NODE_ENV==="development";S.transports.file.level="info";v.logger=S;v.autoDownload=!0;function R(){return Q&&!process.env.FORCE_DEV_UPDATE?(S.info("开发环境中跳过更新检查"),Promise.resolve({updateAvailable:!1})):v.checkForUpdatesAndNotify()}x.whenReady().then(()=>{Q||setTimeout(R,3e3)});v.on("checking-for-update",()=>{S.info("正在检查更新..."),y&&y.webContents.send("update-message","正在检查更新...")});v.on("update-available",o=>{S.info("发现新版本，开始下载..."),y&&y.webContents.send("update-available",o)});v.on("update-not-available",()=>{S.info("当前已是最新版本"),y&&y.webContents.send("update-not-available")});v.on("download-progress",o=>{let e=`下载速度: ${o.bytesPerSecond} - 已下载 ${o.percent}% (${o.transferred}/${o.total})`;S.info(e),y&&y.webContents.send("download-progress",o)});v.on("update-downloaded",()=>{S.info("更新已下载，将在退出时安装"),y&&y.webContents.send("update-downloaded")});v.on("error",o=>{S.error("更新出错",o),y&&y.webContents.send("update-error",o)});i.handle("check-for-updates",()=>R());i.on("quit-and-install",()=>{v.quitAndInstall()});
